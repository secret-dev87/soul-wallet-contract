/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILogicUpgradeControl,
  ILogicUpgradeControlInterface,
} from "../../../contracts/interfaces/ILogicUpgradeControl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newLogic",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "activateTime",
        type: "uint64",
      },
    ],
    name: "PreUpgrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
] as const;

export class ILogicUpgradeControl__factory {
  static readonly abi = _abi;
  static createInterface(): ILogicUpgradeControlInterface {
    return new utils.Interface(_abi) as ILogicUpgradeControlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILogicUpgradeControl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILogicUpgradeControl;
  }
}
