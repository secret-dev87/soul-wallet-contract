/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../contracts/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_paymasterStake",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_unstakeDelaySec",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "withdrawTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "withdrawTime",
            type: "uint64",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "getSenderStorage",
    outputs: [
      {
        internalType: "uint256[]",
        name: "senderStorageCells",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "requestId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymasterStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "offChainSigCheck",
        type: "bool",
      },
    ],
    name: "simulateValidation",
    outputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prefund",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "actualAggregator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sigForUserOp",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sigForAggregation",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "offChainSigInfo",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeDelaySec",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e0604052604051620000129062000129565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b031660c0523480156200004957600080fd5b506040516200365d3803806200365d8339810160408190526200006c9162000137565b63ffffffff8116608081905260a0839052620000cf5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420756e7374616b6544656c617900000000000000000000000060448201526064015b60405180910390fd5b60008211620001215760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207061796d61737465725374616b65000000000000000000006044820152606401620000c6565b505062000172565b61020d806200345083390190565b600080604083850312156200014b57600080fd5b82519150602083015163ffffffff811681146200016757600080fd5b809150509250929050565b60805160a05160c051613299620001b760003960008181610ff9015261227501526000818161013f015261065f0152600081816101d3015261056f01526132996000f3fe6080604052600436106100d25760003560e01c80630396cb60146100e757806314e72634146100fa57806317c6a9871461012d5780631d732756146101615780631fad948c14610181578063205c2878146101a1578063390b9978146101c15780634b1d7cf51461020a5780635287ce121461022a57806370a08231146103485780639b249f6914610368578063b760faf914610395578063bb9fe6bf146103a8578063c23a5cea146103bd578063ec8b5dbf146103dd578063fc7e286d1461040a578063ffb01dd9146104c057600080fd5b366100e2576100e0336104f2565b005b600080fd5b6100e06100f53660046124b8565b610559565b34801561010657600080fd5b5061011a6101153660046124fe565b61081a565b6040519081526020015b60405180910390f35b34801561013957600080fd5b5061011a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561016d57600080fd5b5061011a61017c366004612629565b61085c565b34801561018d57600080fd5b506100e061019c3660046127b0565b6109ab565b3480156101ad57600080fd5b506100e06101bc366004612806565b610ad2565b3480156101cd57600080fd5b506101f57f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610124565b34801561021657600080fd5b506100e06102253660046127b0565b610c89565b34801561023657600080fd5b506102ef610245366004612832565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b038082168352600160701b820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff81166060830152600160201b90046001600160401b0316608082015290565b6040805182516001600160701b03908116825260208085015115159083015283830151169181019190915260608083015163ffffffff16908201526080918201516001600160401b03169181019190915260a001610124565b34801561035457600080fd5b5061011a610363366004612832565b610f9e565b34801561037457600080fd5b5061038861038336600461284f565b610fc2565b6040516101249190612890565b6100e06103a3366004612832565b6104f2565b3480156103b457600080fd5b506100e061107c565b3480156103c957600080fd5b506100e06103d8366004612832565b611188565b3480156103e957600080fd5b506103fd6103f8366004612832565b6113ae565b60405161012491906128a4565b34801561041657600080fd5b50610479610425366004612832565b600060208190529081526040902080546001909101546001600160701b0380831692600160701b810460ff1692600160781b9091049091169063ffffffff811690600160201b90046001600160401b031685565b604080516001600160701b0396871681529415156020860152929094169183019190915263ffffffff1660608201526001600160401b03909116608082015260a001610124565b3480156104cc57600080fd5b506104e06104db3660046128e8565b611414565b6040516101249695949392919061298e565b6104fc813461151b565b6001600160a01b03811660008181526020818152604091829020805492516001600160701b03909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000811690831610156105de5760405162461bcd60e51b8152602060048201526015602482015274756e7374616b652064656c617920746f6f206c6f7760581b60448201526064015b60405180910390fd5b600181015463ffffffff908116908316101561063b5760405162461bcd60e51b815260206004820152601c60248201527b63616e6e6f7420646563726561736520756e7374616b652074696d6560201b60448201526064016105d5565b805460009061065b903490600160781b90046001600160701b0316612a04565b90507f00000000000000000000000000000000000000000000000000000000000000008110156106c35760405162461bcd60e51b81526020600482015260136024820152727374616b652076616c756520746f6f206c6f7760681b60448201526064016105d5565b6001600160701b03811061070a5760405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b60448201526064016105d5565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b02600160781b600160e81b0319951515600160701b026001600160781b0319909716919099161794909417929092169590951786555194909201805492516001600160401b0316600160201b026001600160601b0319909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c019061080d908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b6000610825826115b7565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b6000805a905033301461086e57600080fd5b84516000871561094b5760008083600001516001600160a01b031684604001518c8c60405161089e929190612a17565b60006040518083038160008787f1925050503d80600081146108dc576040519150601f19603f3d011682016040523d82523d6000602084013e6108e1565b606091505b509150915081610948578051156109435783600001516001600160a01b031689602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20186602001518460405161093a929190612a27565b60405180910390a35b600192505b50505b600087608001515a850301905061099d6000838a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506115d0915050565b9a9950505050505050505050565b816000816001600160401b038111156109c6576109c661257a565b6040519080825280602002602001820160405280156109ff57816020015b6109ec61242e565b8152602001906001900390816109e45790505b50905060005b82811015610a5f57610a5681878784818110610a2357610a23612a40565b9050602002810190610a359190612a56565b848481518110610a4757610a47612a40565b602002602001015160006118bf565b50600101610a05565b506000805b83811015610abf57610ab381888884818110610a8257610a82612a40565b9050602002810190610a949190612a56565b858481518110610aa657610aa6612a40565b6020026020010151611a5f565b90910190600101610a64565b50610aca8482611b27565b505050505050565b3360009081526020818152604091829020825160a08101845281546001600160701b03808216808452600160701b830460ff16151595840195909552600160781b90910416938101939093526001015463ffffffff81166060840152600160201b90046001600160401b03166080830152821115610b8e5760405162461bcd60e51b8152602060048201526019602482015278576974686472617720616d6f756e7420746f6f206c6172676560381b60448201526064016105d5565b8051610ba49083906001600160701b0316612a77565b6001600160701b0316815260405133907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb90610be39086908690612a8a565b60405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610c38576040519150601f19603f3d011682016040523d82523d6000602084013e610c3d565b606091505b5050905080610c835760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b60448201526064016105d5565b50505050565b816000805b82811015610ce357858582818110610ca857610ca8612a40565b9050602002810190610cba9190612aa3565b610cc49080612ab9565b610ccf915083612a04565b915080610cdb81612b02565b915050610c8e565b506000816001600160401b03811115610cfe57610cfe61257a565b604051908082528060200260200182016040528015610d3757816020015b610d2461242e565b815260200190600190039081610d1c5790505b5090506000805b84811015610eb55736888883818110610d5957610d59612a40565b9050602002810190610d6b9190612aa3565b9050366000610d7a8380612ab9565b90925090506000610d916040850160208601612832565b90508160005b81811015610e0857610de788868684818110610db557610db5612a40565b9050602002810190610dc79190612a56565b8b8b81518110610dd957610dd9612a40565b6020026020010151866118bf565b5087610df281612b02565b9850508080610e0090612b02565b915050610d97565b506001600160a01b03821615610e9d576001600160a01b03821663e3563a4f8585610e3660408a018a612b1b565b6040518563ffffffff1660e01b8152600401610e559493929190612cc6565b60006040518083038186803b158015610e6d57600080fd5b505afa925050508015610e7e575060015b610e9d578160405163086a9f7560e41b81526004016105d59190612890565b50505050508080610ead90612b02565b915050610d3e565b50600080915060005b85811015610f895736898983818110610ed957610ed9612a40565b9050602002810190610eeb9190612aa3565b9050366000610efa8380612ab9565b90925090508060005b81811015610f7157610f4588858584818110610f2157610f21612a40565b9050602002810190610f339190612a56565b8b8b81518110610aa657610aa6612a40565b610f4f9088612a04565b965087610f5b81612b02565b9850508080610f6990612b02565b915050610f03565b50505050508080610f8190612b02565b915050610ebe565b50610f948682611b27565b5050505050505050565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b60003315610fe25760405162461bcd60e51b81526004016105d590612d43565b604051632b870d1b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a36906110309086908690600401612d8f565b6020604051808303816000875af115801561104f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110739190612da3565b90505b92915050565b3360009081526020819052604081206001810154909163ffffffff90911690036110b85760405162461bcd60e51b81526004016105d590612ddd565b8054600160701b900460ff166111045760405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b60448201526064016105d5565b600181015460009061111c9063ffffffff1642612def565b600183018054600160201b600160601b031916600160201b6001600160401b03841690810291909117909155835460ff60701b1916845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a9060200161054d565b3360009081526020819052604090208054600160781b90046001600160701b0316806111ed5760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b60448201526064016105d5565b6001820154600160201b90046001600160401b031661124e5760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b65282920666972737400000060448201526064016105d5565b600182015442600160201b9091046001600160401b031611156112b15760405162461bcd60e51b815260206004820152601b60248201527a5374616b65207769746864726177616c206973206e6f742064756560281b60448201526064016105d5565b6001820180546001600160601b03191690558154600160781b600160e81b031916825560405133907fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3906113089086908590612a8a565b60405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d806000811461135d576040519150601f19603f3d011682016040523d82523d6000602084013e611362565b606091505b5050905080610c835760405162461bcd60e51b81526020600482015260186024820152776661696c656420746f207769746864726177207374616b6560401b60448201526064016105d5565b6001600160a01b0381166000908152602081905260409081902081516001808252818401909352606092829190816020016020820280368337019050509250818360008151811061140157611401612a40565b6020026020010181815250505050919050565b6000806000606080606060005a905061142b61242e565b61143960008b8360016118bf565b9550806040015196508960c001355a6114529084612a77565b61145c9190612a04565b975061146743600052565b6001600160a01b038616156114f15760405163303b6a1d60e11b81526001600160a01b03871690636076d43a906114a4908d908d90600401612e16565b600060405180830381865afa1580156114c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114e99190810190612ea1565b919650945092505b331561150f5760405162461bcd60e51b81526004016105d590612d43565b50509295509295509295565b6001600160a01b0382166000908152602081905260408120805490919061154c9084906001600160701b0316612a04565b90506001600160701b038111156115985760405162461bcd60e51b815260206004820152601060248201526f6465706f736974206f766572666c6f7760801b60448201526064016105d5565b81546001600160701b0319166001600160701b03919091161790555050565b60006115c282611bd8565b805190602001209050919050565b6000805a8551909150600090816115e682611c17565b60a08301519091506001600160a01b0381166116055782519350611797565b80935060008851111561179757868202955060028a600281111561162b5761162b612f28565b1461169d57606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611665908e908d908c90600401612f3e565b600060405180830381600088803b15801561167f57600080fd5b5087f1158015611693573d6000803e3d6000fd5b5050505050611797565b606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a23409916116d2908e908d908c90600401612f3e565b600060405180830381600088803b1580156116ec57600080fd5b5087f1935050505080156116fe575060015b6117975761170a612f85565b806308c379a003611747575061171e612fa1565b806117295750611749565b8b828260405162fa072b60e01b81526004016105d59392919061302a565b505b60405162fa072b60e01b8152600481018c90526001600160a01b038216602482015260606044820152600d60648201526c1c1bdcdd13dc081c995d995c9d609a1b608482015260a4016105d5565b5a8503870196508187029550858960400151101561180b5760405162fa072b60e01b8152600481018c90526001600160a01b038216602482015260606044820152601b60648201527a1c1c99599d5b990818995b1bddc81858dd1d585b11d85cd0dbdcdd602a1b608482015260a4016105d5565b604089015186900361181d858261151b565b6000808c600281111561183257611832612f28565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f33fd4d1f25a5461bea901784a6571de6debc16cd0831932c22c6969cd73ba99488602001518c89876040516118a79493929190938452602084019290925260408301521515606082015260800190565b60405180910390a45050505050505095945050505050565b6000805a84519091506118d28682611c47565b6118db8661081a565b6020860152604081015160608201516080830151171760e087013517610100870135176001600160781b0381111561194b5760405162461bcd60e51b81526020600482015260136024820152726761732076616c756573206f766572666c6f7760681b60448201526064016105d5565b60008061195784611d3b565b90506119668a8a8a8a85611d89565b9650915061197343600052565b60a08401516060906001600160a01b03161561199d576119968b8b8b8587611ff9565b90506119ae565b506040805160208101909152600081525b60005a87039050808b60a001351015611a315760a086015160405162fa072b60e01b8152600481018e90526001600160a01b03909116602482015260606044820152602360648201527f55736564206d6f7265207468616e20766572696669636174696f6e4761734c696084820152621b5a5d60ea1b60a482015260c4016105d5565b60408a018390528160608b015260c08b01355a8803018a608001818152505050505050505050949350505050565b6000805a90506000611a72846060015190565b905030631d732756611a876060880188612b1b565b87856040518563ffffffff1660e01b8152600401611aa8949392919061305d565b6020604051808303816000875af1925050508015611ae3575060408051601f3d908101601f19168201909252611ae091810190613110565b60015b611b1b57600084608001515a611af99085612a77565b611b039190612a04565b9050611b138760028785856115d0565b935050611b1e565b92505b50509392505050565b6001600160a01b038216611b735760405162461bcd60e51b8152602060048201526013602482015272696e76616c69642062656e656669636961727960681b60448201526064016105d5565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611bc0576040519150601f19603f3d011682016040523d82523d6000602084013e611bc5565b606091505b5050905080611bd357600080fd5b505050565b6060366000611beb610140850185612b1b565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b60c081015160e082015160009190808203611c33575092915050565b611c3f824883016121db565b949350505050565b611c546020830183612832565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e0808401359183019190915261010083013590820152366000611cb3610120850185612b1b565b90925090508015611d2e576014811015611d0a5760405162461bcd60e51b8152602060048201526018602482015277696e76616c6964207061796d6173746572416e644461746160401b60448201526064016105d5565b611d18601460008385613129565b611d2191613153565b60601c60a0840152610c83565b600060a084015250505050565b60a081015160009081906001600160a01b0316611d59576001611d5c565b60035b60ff1690506000836080015182856060015102856040015101019050611d8184611c17565b029392505050565b60008060005a8651909150611dab8982611da660408c018c612b1b565b6121f1565b6000196001600160a01b03871601611e315780600001516001600160a01b0316633ad59dbc6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e1b575060408051601f3d908101601f19168201909252611e1891810190612da3565b60015b611e2b5760009250829550611e31565b95508592505b805160a0820151600091906001600160a01b038116611e6d576000611e5583610f9e565b9050888111611e6657808903611e69565b60005b9350505b816001600160a01b0316630825d1fc85606001518d8d602001518d886040518663ffffffff1660e01b8152600401611ea89493929190613183565b600060405180830381600088803b158015611ec257600080fd5b5087f193505050508015611ed4575060015b611f3d57611ee0612f85565b806308c379a003611f1e5750611ef4612fa1565b80611eff5750611f20565b8c60008260405162fa072b60e01b81526004016105d59392919061302a565b505b8b600060405162fa072b60e01b81526004016105d59291906131bb565b6001600160a01b038116611fe5576001600160a01b038216600090815260208190526040902080546001600160701b0316808a1115611fc85760405162fa072b60e01b8152600481018f9052600060248201526060604482015260196064820152781dd85b1b195d08191a591b89dd081c185e481c1c99599d5b99603a1b608482015260a4016105d5565b81546001600160701b031916908a90036001600160701b03161790555b5a8503965050505050509550959350505050565b825160a08101516001600160a01b038116600090815260208190526040902080546060939291906001600160701b03811690600160701b900460ff1680612056578a8460405162fa072b60e01b81526004016105d59291906131e1565b878210156120b85760405162fa072b60e01b8152600481018c90526001600160a01b03851660248201526060604482015260196064820152787061796d6173746572206465706f73697420746f6f206c6f7760381b608482015260a4016105d5565b8782038360000160006101000a8154816001600160701b0302191690836001600160701b031602179055506000878660600151039050846001600160a01b031663f465c77e828d8d602001518d6040518563ffffffff1660e01b81526004016121239392919061320a565b60006040518083038160008887f19350505050801561216457506040513d6000823e601f3d908101601f19168201604052612161919081019061322f565b60015b6121cb57612170612f85565b806308c379a0036121ad5750612184612fa1565b8061218f57506121af565b8c868260405162fa072b60e01b81526004016105d59392919061302a565b505b8b8560405162fa072b60e01b81526004016105d59291906131bb565b9c9b505050505050505050505050565b60008183106121ea5781611073565b5090919050565b8015610c835782516001600160a01b03163b1561225b5760405162fa072b60e01b8152600481018590526000602482015260606044820152601a6064820152791cd95b99195c88185b1c9958591e4818dbdb9cdd1c9d58dd195960321b608482015260a4016105d5565b604051632b870d1b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a36906122ac9086908690600401612d8f565b6020604051808303816000875af11580156122cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ef9190612da3565b90506001600160a01b0381166123475760405162fa072b60e01b8152600481018690526000602482015260606044820152600f60648201526e1a5b9a5d10dbd9194819985a5b1959608a1b608482015260a4016105d5565b83516001600160a01b038281169116146123bf5760405162fa072b60e01b8152600481018690526000602482015260606044820152602560648201527f73656e64657220646f65736e2774206d6174636820696e6974436f6465206164608482015264647265737360d81b60a482015260c4016105d5565b806001600160a01b03163b6000036124275760405162fa072b60e01b8152600481018690526000602482015260606044820152602060648201527f696e6974436f6465206661696c656420746f206372656174652073656e646572608482015260a4016105d5565b5050505050565b6040518060a0016040528061249360405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b6000602082840312156124ca57600080fd5b813563ffffffff811681146124de57600080fd5b9392505050565b600061016082840312156124f857600080fd5b50919050565b60006020828403121561251057600080fd5b81356001600160401b0381111561252657600080fd5b611c3f848285016124e5565b60008083601f84011261254457600080fd5b5081356001600160401b0381111561255b57600080fd5b60208301915083602082850101111561257357600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60a081016001600160401b03811182821017156125af576125af61257a565b60405250565b61010081016001600160401b03811182821017156125af576125af61257a565b601f8201601f191681016001600160401b03811182821017156125fa576125fa61257a565b6040525050565b6001600160a01b038116811461261657600080fd5b50565b803561262481612601565b919050565b60008060008060008587036101c081121561264357600080fd5b86356001600160401b038082111561265a57600080fd5b6126668a838b01612532565b9098509650601f19929092019161018091508183121561268557600080fd5b60405161269181612590565b610100808512156126a157600080fd5b60405194506126af856125b5565b6126bb60208c01612619565b855260408b0135602086015260608b0135604086015260808b0135606086015260a08b013560808601526126f160c08c01612619565b60a086015260e08b81013560c0870152908b0135908501529283526101208901356020840152610140890135604084015261016089013560608401528189013560808401529194506101a0880135918083111561274d57600080fd5b505061275b88828901612532565b969995985093965092949392505050565b60008083601f84011261277e57600080fd5b5081356001600160401b0381111561279557600080fd5b6020830191508360208260051b850101111561257357600080fd5b6000806000604084860312156127c557600080fd5b83356001600160401b038111156127db57600080fd5b6127e78682870161276c565b90945092505060208401356127fb81612601565b809150509250925092565b6000806040838503121561281957600080fd5b823561282481612601565b946020939093013593505050565b60006020828403121561284457600080fd5b81356124de81612601565b6000806020838503121561286257600080fd5b82356001600160401b0381111561287857600080fd5b61288485828601612532565b90969095509350505050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156128dc578351835292840192918401916001016128c0565b50909695505050505050565b600080604083850312156128fb57600080fd5b82356001600160401b0381111561291157600080fd5b61291d858286016124e5565b9250506020830135801515811461293357600080fd5b809150509250929050565b60005b83811015612959578181015183820152602001612941565b50506000910152565b6000815180845261297a81602086016020860161293e565b601f01601f19169290920160200192915050565b86815285602082015260018060a01b038516604082015260c0606082015260006129bb60c0830186612962565b82810360808401526129cd8186612962565b905082810360a08401526129e18185612962565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611076576110766129ee565b8183823760009101908152919050565b828152604060208201526000611c3f6040830184612962565b634e487b7160e01b600052603260045260246000fd5b6000823561015e19833603018112612a6d57600080fd5b9190910192915050565b81810381811115611076576110766129ee565b6001600160a01b03929092168252602082015260400190565b60008235605e19833603018112612a6d57600080fd5b6000808335601e19843603018112612ad057600080fd5b8301803591506001600160401b03821115612aea57600080fd5b6020019150600581901b360382131561257357600080fd5b600060018201612b1457612b146129ee565b5060010190565b6000808335601e19843603018112612b3257600080fd5b8301803591506001600160401b03821115612b4c57600080fd5b60200191503681900382131561257357600080fd5b6000808335601e19843603018112612b7857600080fd5b83016020810192503590506001600160401b03811115612b9757600080fd5b80360382131561257357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000610160612bee84612be185612619565b6001600160a01b03169052565b60208301356020850152612c056040840184612b61565b826040870152612c188387018284612ba6565b92505050612c296060840184612b61565b8583036060870152612c3c838284612ba6565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e0850152610100808401358186015250610120612c8381850185612b61565b86840383880152612c95848284612ba6565b9350505050610140612ca981850185612b61565b86840383880152612cbb848284612ba6565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b89811015612d2c57868503605f190184528235368c900361015e19018112612d0a578283fd5b612d16868d8301612bcf565b9550506020938401939290920191600101612ce4565b505050508281036020840152612cbb818587612ba6565b6020808252602c908201527f6d7573742062652063616c6c6564206f66662d636861696e207769746820667260408201526b37b69ebd32b93796b0b2323960a11b606082015260800190565b602081526000611c3f602083018486612ba6565b600060208284031215612db557600080fd5b81516124de81612601565b600a8152691b9bdd081cdd185ad95960b21b602082015260400190565b60208152600061107660208301612dc0565b6001600160401b03818116838216019080821115612e0f57612e0f6129ee565b5092915050565b604081526000612e296040830185612bcf565b905082151560208301529392505050565b600082601f830112612e4b57600080fd5b81516001600160401b03811115612e6457612e6461257a565b604051612e7b601f8301601f1916602001826125d5565b818152846020838601011115612e9057600080fd5b611c3f82602083016020870161293e565b600080600060608486031215612eb657600080fd5b83516001600160401b0380821115612ecd57600080fd5b612ed987838801612e3a565b94506020860151915080821115612eef57600080fd5b612efb87838801612e3a565b93506040860151915080821115612f1157600080fd5b50612f1e86828701612e3a565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b600060038510612f5e57634e487b7160e01b600052602160045260246000fd5b84825260606020830152612f756060830185612962565b9050826040830152949350505050565b600060033d1115612f9e5760046000803e5060005160e01c5b90565b600060443d1015612faf5790565b6040516003193d81016004833e81513d6001600160401b038083116024840183101715612fde57505050505090565b8285019150815181811115612ff65750505050505090565b843d87010160208285010111156130105750505050505090565b61301f602082860101876125d5565b509095945050505050565b8381526001600160a01b038316602082015260606040820181905260009061305490830184612962565b95945050505050565b60006101c08083526130728184018789612ba6565b9050845160018060a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a0840152612cbb8185612962565b60006020828403121561312257600080fd5b5051919050565b6000808585111561313957600080fd5b8386111561314657600080fd5b5050820193919092039150565b6001600160601b0319813581811691601485101561317b5780818660140360031b1b83161692505b505092915050565b6080815260006131966080830187612bcf565b6020830195909552506001600160a01b03929092166040830152606090910152919050565b9182526001600160a01b0316602082015260606040820181905260009082015260800190565b8281526001600160a01b0382166020820152606060408201819052600090611c3f908301612dc0565b60608152600061321d6060830186612bcf565b60208301949094525060400152919050565b60006020828403121561324157600080fd5b81516001600160401b0381111561325757600080fd5b611c3f84828501612e3a56fea264697066735822122068c9da15aabd2b51f70f3974ce9df48843ac463590dd772e143aeb08a00fe31264736f6c63430008110033608060405234801561001057600080fd5b506101ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100ec565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008061006f601482858761015d565b61007891610187565b60601c9050600061008c846014818861015d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100e357600093505b50505092915050565b600080602083850312156100ff57600080fd5b82356001600160401b038082111561011657600080fd5b818501915085601f83011261012a57600080fd5b81358181111561013957600080fd5b86602082850101111561014b57600080fd5b60209290920196919550909350505050565b6000808585111561016d57600080fd5b8386111561017a57600080fd5b5050820193919092039150565b6001600160601b031981358181169160148510156101af5780818660140360031b1b83161692505b50509291505056fea26469706673582212200df270207c17c93229049719b742865a247758059fc01db7932c8b227baab95364736f6c63430008110033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _paymasterStake: PromiseOrValue<BigNumberish>,
    _unstakeDelaySec: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(
      _paymasterStake,
      _unstakeDelaySec,
      overrides || {}
    ) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    _paymasterStake: PromiseOrValue<BigNumberish>,
    _unstakeDelaySec: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _paymasterStake,
      _unstakeDelaySec,
      overrides || {}
    );
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
