/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../contracts/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prefund",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "SimulationResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prefund",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "actualAggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "SimulationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "withdrawTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "withdrawTime",
            type: "uint64",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052604051620000129062000050565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b506200005e565b61023380620037b283390190565b6080516137316200008160003960008181610fe9015261286d01526137316000f3fe6080604052600436106100e15760003560e01c80639b249f691161007f578063bb9fe6bf11610059578063bb9fe6bf1461035a578063c23a5cea1461036f578063ee2194231461038f578063fc7e286d146103af57600080fd5b80639b249f6914610307578063a619353114610327578063b760faf91461034757600080fd5b8063205c2878116100bb578063205c28781461015c5780634b1d7cf51461017c5780635287ce121461019c57806370a08231146102c857600080fd5b80630396cb60146100f65780631d732756146101095780631fad948c1461013c57600080fd5b366100f1576100ef33610473565b005b600080fd5b6100ef610104366004612b3b565b6104da565b34801561011557600080fd5b50610129610124366004612c63565b6107b6565b6040519081526020015b60405180910390f35b34801561014857600080fd5b506100ef610157366004612dec565b610948565b34801561016857600080fd5b506100ef610177366004612e43565b610a71565b34801561018857600080fd5b506100ef610197366004612dec565b610bff565b3480156101a857600080fd5b5061026e6101b7366004612e6f565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b0380821683526e010000000000000000000000000000820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff81166060830152640100000000900467ffffffffffffffff16608082015290565b6040805182516001600160701b03908116825260208085015115159083015283830151169181019190915260608083015163ffffffff169082015260809182015167ffffffffffffffff169181019190915260a001610133565b3480156102d457600080fd5b506101296102e3366004612e6f565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b34801561031357600080fd5b506100ef610322366004612e8c565b610fb9565b34801561033357600080fd5b50610129610342366004612ece565b6110a1565b6100ef610355366004612e6f565b610473565b34801561036657600080fd5b506100ef6110e3565b34801561037b57600080fd5b506100ef61038a366004612e6f565b611268565b34801561039b57600080fd5b506100ef6103aa366004612ece565b6114c4565b3480156103bb57600080fd5b5061042b6103ca366004612e6f565b600060208190529081526040902080546001909101546001600160701b03808316926e010000000000000000000000000000810460ff1692600160781b9091049091169063ffffffff811690640100000000900467ffffffffffffffff1685565b604080516001600160701b0396871681529415156020860152929094169183019190915263ffffffff16606082015267ffffffffffffffff909116608082015260a001610133565b61047d8134611764565b6001600160a01b03811660008181526020818152604091829020805492516001600160701b03909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166105415760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff908116908316101561059f5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606401610538565b80546000906105bf903490600160781b90046001600160701b0316612f20565b9050600081116106115760405162461bcd60e51b815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152606401610538565b6001600160701b0381106106675760405162461bcd60e51b815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152606401610538565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b027fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff9515156e010000000000000000000000000000027fffffffffffffffffffffffffffffffffff0000000000000000000000000000009097169190991617949094179290921695909517865551949092018054925167ffffffffffffffff16640100000000026bffffffffffffffffffffffff19909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01906107a9908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b6000805a905033301461080b5760405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606401610538565b8451600087156108e85760008083600001516001600160a01b031684604001518c8c60405161083b929190612f33565b60006040518083038160008787f1925050503d8060008114610879576040519150601f19603f3d011682016040523d82523d6000602084013e61087e565b606091505b5091509150816108e5578051156108e05783600001516001600160a01b031689602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018660200151846040516108d7929190612f93565b60405180910390a35b600192505b50505b600087608001515a850301905061093a6000838a8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250611814915050565b9a9950505050505050505050565b8160008167ffffffffffffffff81111561096457610964612bb1565b60405190808252806020026020018201604052801561099d57816020015b61098a612ab1565b8152602001906001900390816109825790505b50905060005b828110156109fe576109f4818787848181106109c1576109c1612fac565b90506020028101906109d39190612fc2565b8484815181106109e5576109e5612fac565b60200260200101516000611b45565b50506001016109a3565b506000805b83811015610a5e57610a5281888884818110610a2157610a21612fac565b9050602002810190610a339190612fc2565b858481518110610a4557610a45612fac565b6020026020010151611d0e565b90910190600101610a03565b50610a698482611dd6565b505050505050565b33600090815260208190526040902080546001600160701b0316821115610ada5760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606401610538565b8054610af09083906001600160701b0316612fe3565b81546dffffffffffffffffffffffffffff19166001600160701b0391909116178155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610ba3576040519150601f19603f3d011682016040523d82523d6000602084013e610ba8565b606091505b5050905080610bf95760405162461bcd60e51b815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152606401610538565b50505050565b816000805b82811015610c5957858582818110610c1e57610c1e612fac565b9050602002810190610c309190612ff6565b610c3a908061302a565b610c45915083612f20565b915080610c5181613074565b915050610c04565b5060008167ffffffffffffffff811115610c7557610c75612bb1565b604051908082528060200260200182016040528015610cae57816020015b610c9b612ab1565b815260200190600190039081610c935790505b5090506000805b84811015610e505736888883818110610cd057610cd0612fac565b9050602002810190610ce29190612ff6565b9050366000610cf1838061302a565b90925090506000610d086040850160208601612e6f565b90508160005b81811015610d8157610d5e88868684818110610d2c57610d2c612fac565b9050602002810190610d3e9190612fc2565b8b8b81518110610d5057610d50612fac565b602002602001015186611b45565b50508780610d6b90613074565b9850508080610d7990613074565b915050610d0e565b506001600160a01b03821615610e38576001600160a01b03821663e3563a4f8585610daf60408a018a61308e565b6040518563ffffffff1660e01b8152600401610dce949392919061323d565b60006040518083038186803b158015610de657600080fd5b505afa925050508015610df7575060015b610e38576040517f86a9f7500000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610538565b50505050508080610e4890613074565b915050610cb5565b50600080915060005b85811015610f705736898983818110610e7457610e74612fac565b9050602002810190610e869190612ff6565b90507f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d610eb96040830160208401612e6f565b6040516001600160a01b03909116815260200160405180910390a1366000610ee1838061302a565b90925090508060005b81811015610f5857610f2c88858584818110610f0857610f08612fac565b9050602002810190610f1a9190612fc2565b8b8b81518110610a4557610a45612fac565b610f369088612f20565b965087610f4281613074565b9850508080610f5090613074565b915050610eea565b50505050508080610f6890613074565b915050610e59565b50604051600081527f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d9060200160405180910390a1610faf8682611dd6565b5050505050505050565b6040517f570e1a360000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a369061102090859085906004016132d7565b6020604051808303816000875af115801561103f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106391906132eb565b6040517f6ca7b8060000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152602401610538565b60006110ac82611ed4565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff909116900361114f5760405162461bcd60e51b815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152606401610538565b80546e010000000000000000000000000000900460ff166111b25760405162461bcd60e51b815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152606401610538565b60018101546000906111ca9063ffffffff1642613308565b6001830180547fffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffff1664010000000067ffffffffffffffff84169081029190911790915583547fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff16845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a906020016104ce565b3360009081526020819052604090208054600160781b90046001600160701b0316806112d65760405162461bcd60e51b815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152606401610538565b6001820154640100000000900467ffffffffffffffff166113395760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606401610538565b60018201544264010000000090910467ffffffffffffffff1611156113a05760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606401610538565b6001820180546bffffffffffffffffffffffff1916905581547fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff168255604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d806000811461146e576040519150601f19603f3d011682016040523d82523d6000602084013e611473565b606091505b5050905080610bf95760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610538565b60005a90506114d1612ab1565b6000806114e2600086856001611b45565b60408501519193509150600060c08701355a6114fe9088612fe3565b6115089190612f20565b855160a00151604080518082018252600080825260208083018281526001600160a01b03958616835282825284832080546001600160701b03600160781b918290048116875260019283015463ffffffff9081169094528e51518851808a018a5287815280870188815291909a16875294869052878620805492909204168852015416905293945092369161159f908c018c61308e565b9092509050600060148210156115b65760006115d1565b6115c4601460008486613330565b6115cd9161335a565b60601c5b604080518082018252600080825260208083018281526001600160a01b0386168352908290529281208054600160781b90046001600160701b031683526001015463ffffffff16909252919250506001600160a01b038a1615611726576040805180820182526001600160a01b038c1680825282518084018452600080825260208083018281529382528181529481208054600160781b90046001600160701b031683526001015463ffffffff1690925290928201526040517fc003fc83000000000000000000000000000000000000000000000000000000008152600481018a9052602481018b9052604481018c9052875160648201526020808901516084830152845160a48301528085015160c4830152895160e4830152808a015161010483015282516001600160a01b0316610124830152808301518051610144840152015161016482015290915061018401610538565b86888a87848a6040517f5f8f83a20000000000000000000000000000000000000000000000000000000081526004016105389695949392919061338f565b6001600160a01b038216600090815260208190526040812080549091906117959084906001600160701b0316612f20565b90506001600160701b038111156117ee5760405162461bcd60e51b815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152606401610538565b81546dffffffffffffffffffffffffffff19166001600160701b03919091161790555050565b6000805a85519091506000908161182a82611eed565b60a08301519091506001600160a01b0381166118495782519350611a1d565b809350600088511115611a1d57868202955060028a600281111561186f5761186f6133dd565b146118fa5760608301516040517fa9a234090000000000000000000000000000000000000000000000000000000081526001600160a01b0383169163a9a23409916118c2908e908d908c906004016133f3565b600060405180830381600088803b1580156118dc57600080fd5b5087f11580156118f0573d6000803e3d6000fd5b5050505050611a1d565b60608301516040517fa9a234090000000000000000000000000000000000000000000000000000000081526001600160a01b0383169163a9a2340991611948908e908d908c906004016133f3565b600060405180830381600088803b15801561196257600080fd5b5087f193505050508015611974575060015b611a1d5761198061343a565b806308c379a0036119bd5750611994613456565b8061199f57506119bf565b8b828260405162fa072b60e01b8152600401610538939291906134fe565b505b60405162fa072b60e01b8152600481018c90526001600160a01b038216602482015260606044820152601160648201527f41353020706f73744f7020726576657274000000000000000000000000000000608482015260a401610538565b5a85038701965081870295508589604001511015611a935760405162fa072b60e01b8152600481018c90526001600160a01b038216602482015260606044820152601f60648201527f4135312070726566756e642062656c6f772061637475616c476173436f737400608482015260a401610538565b6040890151869003611aa58582611764565b6000808c6002811115611aba57611aba6133dd565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f8860200151858d8f604051611b2d949392919093845291151560208401526040830152606082015260800190565b60405180910390a45050505050505095945050505050565b60008060005a8551909150611b5a8782611f1d565b611b63876110a1565b6020870152604081015160608201516080830151171760e088013517610100880135176effffffffffffffffffffffffffffff811115611be55760405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606401610538565b600080611bf184612016565b9050611c008b8b8b8b85612064565b90985096509150611c1043600052565b60a08401516060906001600160a01b031615611c57576000611c358d8d8d86886124a8565b90925090508015801590611c4857508781105b15611c51578097505b50611c68565b506040805160208101909152600081525b60005a87039050808c60a001351015611cdf5760a086015160405162fa072b60e01b8152600481018f90526001600160a01b03909116602482015260606044820152601e60648201527f41413430206f76657220766572696669636174696f6e4761734c696d69740000608482015260a401610538565b60408b018390528160608c015260c08c01355a8803018b60800181815250505050505050505094509492505050565b6000805a90506000611d21846060015190565b905030631d732756611d36606088018861308e565b87856040518563ffffffff1660e01b8152600401611d57949392919061352f565b6020604051808303816000875af1925050508015611d92575060408051601f3d908101601f19168201909252611d8f918101906135e3565b60015b611dca57600084608001515a611da89085612fe3565b611db29190612f20565b9050611dc2876002878585611814565b935050611dcd565b92505b50509392505050565b6001600160a01b038216611e2c5760405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606401610538565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611e79576040519150601f19603f3d011682016040523d82523d6000602084013e611e7e565b606091505b5050905080611ecf5760405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606401610538565b505050565b6000611edf8261276c565b805190602001209050919050565b60c081015160e082015160009190808203611f09575092915050565b611f15824883016127ab565b949350505050565b611f2a6020830183612e6f565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e0808401359183019190915261010083013590820152366000611f8961012085018561308e565b90925090508015612009576014811015611fe55760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606401610538565b611ff3601460008385613330565b611ffc9161335a565b60601c60a0840152610bf9565b600060a084015250505050565b60a081015160009081906001600160a01b0316612034576001612037565b60035b60ff169050600083608001518285606001510285604001510101905061205c84611eed565b029392505050565b6000806000805a875180519192509061208a8b8a61208560408e018e61308e565b6127c5565b6000196001600160a01b03891601612200576120a543600052565b806001600160a01b03163b60000361210d5760405162fa072b60e01b8152600060048201819052602482015260606044820152601960648201527f41413230206163636f756e74206e6f74206465706c6f79656400000000000000608482015260a401610538565b60a08201516001600160a01b031615801590612135575060a08201516001600160a01b03163b155b156121905760405162fa072b60e01b8152600060048201819052602482015260606044820152601b60648201527f41413330207061796d6173746572206e6f74206465706c6f7965640000000000608482015260a401610538565b806001600160a01b0316633ad59dbc6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156121ea575060408051601f3d908101601f191682019092526121e7918101906132eb565b60015b6121fa5760009450849750612200565b97508794505b60a08201516000906001600160a01b03811661224e576001600160a01b0383166000908152602081905260409020546001600160701b031689811161224757808a0361224a565b60005b9250505b826001600160a01b0316630825d1fc85606001518e8e602001518e876040518663ffffffff1660e01b815260040161228994939291906135fc565b60206040518083038160008887f1935050505080156122c5575060408051601f3d908101601f191682019092526122c2918101906135e3565b60015b612367576122d161343a565b806308c379a00361230f57506122e5613456565b806122f05750612311565b8d60008260405162fa072b60e01b8152600401610538939291906134fe565b505b60405162fa072b60e01b8152600481018e90526000602482015260606044820152601660648201527f4141323320726576657274656420286f72204f4f472900000000000000000000608482015260a401610538565b801580159061237557504281105b156123d05760405162fa072b60e01b8152600481018f90526000602482015260606044820152600c60648201527f4141323220657870697265640000000000000000000000000000000000000000608482015260a401610538565b95506001600160a01b038116612493576001600160a01b038316600090815260208190526040902080546001600160701b0316808b111561246f578e600060405162fa072b60e01b81526004016105389291909182526001600160a01b031660208201526060604082018190526017908201527f41413231206469646e2774207061792070726566756e64000000000000000000608082015260a00190565b81546dffffffffffffffffffffffffffff1916908b90036001600160701b03161790555b5a850397505050505050955095509592505050565b825160608181015190916000918481116125045760405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606401610538565b60a08201516001600160a01b038116600090815260208190526040902080548784039291906001600160701b0316898110156125985760405162fa072b60e01b8152600481018e90526001600160a01b038416602482015260606044820152601e60648201527f41413331207061796d6173746572206465706f73697420746f6f206c6f770000608482015260a401610538565b8981038260000160006101000a8154816001600160701b0302191690836001600160701b03160217905550826001600160a01b031663f465c77e858e8e602001518e6040518563ffffffff1660e01b81526004016125f893929190613634565b60006040518083038160008887f19350505050801561263957506040513d6000823e601f3d908101601f191682016040526126369190810190613659565b60015b6126e25761264561343a565b806308c379a0036126825750612659613456565b806126645750612684565b8d848260405162fa072b60e01b8152600401610538939291906134fe565b505b60405162fa072b60e01b8152600481018e90526001600160a01b038416602482015260606044820152601660648201527f4141333320726576657274656420286f72204f4f472900000000000000000000608482015260a401610538565b80158015906126f057504281105b15612758578e8560405162fa072b60e01b81526004016105389291909182526001600160a01b031660208201526060604082018190526016908201527f41413332207061796d6173746572206578706972656400000000000000000000608082015260a00190565b909e909d509b505050505050505050505050565b606036600061277f61014085018561308e565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b60008183106127ba57816127bc565b825b90505b92915050565b8015610bf9578251516001600160a01b0381163b156128345760405162fa072b60e01b8152600481018690526000602482015260606044820152601f60648201527f414131302073656e64657220616c726561647920636f6e737472756374656400608482015260a401610538565b8351606001516040517f570e1a360000000000000000000000000000000000000000000000000000000081526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163570e1a3691906128a590889088906004016132d7565b60206040518083038160008887f11580156128c4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906128e991906132eb565b90506001600160a01b03811661294f5760405162fa072b60e01b8152600481018790526000602482015260606044820152601b60648201527f4141313320696e6974436f6465206661696c6564206f72204f4f470000000000608482015260a401610538565b816001600160a01b0316816001600160a01b0316146129be5760405162fa072b60e01b8152600481018790526000602482015260606044820152602060648201527f4141313420696e6974436f6465206d7573742072657475726e2073656e646572608482015260a401610538565b806001600160a01b03163b600003612a265760405162fa072b60e01b8152600481018790526000602482015260606044820152602060648201527f4141313520696e6974436f6465206d757374206372656174652073656e646572608482015260a401610538565b6000612a356014828688613330565b612a3e9161335a565b60601c9050826001600160a01b031686602001517fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d83896000015160a00151604051612aa09291906001600160a01b0392831681529116602082015260400190565b60405180910390a350505050505050565b6040518060a00160405280612b1660405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b600060208284031215612b4d57600080fd5b813563ffffffff81168114612b6157600080fd5b9392505050565b60008083601f840112612b7a57600080fd5b50813567ffffffffffffffff811115612b9257600080fd5b602083019150836020828501011115612baa57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60a0810181811067ffffffffffffffff82111715612be757612be7612bb1565b60405250565b610100810181811067ffffffffffffffff82111715612be757612be7612bb1565b601f19601f830116810181811067ffffffffffffffff82111715612c3457612c34612bb1565b6040525050565b6001600160a01b0381168114612c5057600080fd5b50565b8035612c5e81612c3b565b919050565b60008060008060008587036101c0811215612c7d57600080fd5b863567ffffffffffffffff80821115612c9557600080fd5b612ca18a838b01612b68565b9098509650601f199290920191610180915081831215612cc057600080fd5b604051612ccc81612bc7565b61010080851215612cdc57600080fd5b6040519450612cea85612bed565b612cf660208c01612c53565b855260408b0135602086015260608b0135604086015260808b0135606086015260a08b01356080860152612d2c60c08c01612c53565b60a086015260e08b81013560c0870152908b0135908501529283526101208901356020840152610140890135604084015261016089013560608401528189013560808401529194506101a08801359180831115612d8857600080fd5b5050612d9688828901612b68565b969995985093965092949392505050565b60008083601f840112612db957600080fd5b50813567ffffffffffffffff811115612dd157600080fd5b6020830191508360208260051b8501011115612baa57600080fd5b600080600060408486031215612e0157600080fd5b833567ffffffffffffffff811115612e1857600080fd5b612e2486828701612da7565b9094509250506020840135612e3881612c3b565b809150509250925092565b60008060408385031215612e5657600080fd5b8235612e6181612c3b565b946020939093013593505050565b600060208284031215612e8157600080fd5b8135612b6181612c3b565b60008060208385031215612e9f57600080fd5b823567ffffffffffffffff811115612eb657600080fd5b612ec285828601612b68565b90969095509350505050565b600060208284031215612ee057600080fd5b813567ffffffffffffffff811115612ef757600080fd5b82016101608185031215612b6157600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156127bf576127bf612f0a565b8183823760009101908152919050565b60005b83811015612f5e578181015183820152602001612f46565b50506000910152565b60008151808452612f7f816020860160208601612f43565b601f01601f19169290920160200192915050565b828152604060208201526000611f156040830184612f67565b634e487b7160e01b600052603260045260246000fd5b6000823561015e19833603018112612fd957600080fd5b9190910192915050565b818103818111156127bf576127bf612f0a565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112612fd957600080fd5b6000808335601e1984360301811261304157600080fd5b83018035915067ffffffffffffffff82111561305c57600080fd5b6020019150600581901b3603821315612baa57600080fd5b6000600019820361308757613087612f0a565b5060010190565b6000808335601e198436030181126130a557600080fd5b83018035915067ffffffffffffffff8211156130c057600080fd5b602001915036819003821315612baa57600080fd5b6000808335601e198436030181126130ec57600080fd5b830160208101925035905067ffffffffffffffff81111561310c57600080fd5b803603821315612baa57600080fd5b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60006101606131658461315885612c53565b6001600160a01b03169052565b6020830135602085015261317c60408401846130d5565b82604087015261318f838701828461311b565b925050506131a060608401846130d5565b85830360608701526131b383828461311b565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e08501526101008084013581860152506101206131fa818501856130d5565b8684038388015261320c84828461311b565b9350505050610140613220818501856130d5565b8684038388015261323284828461311b565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b898110156132c0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0878603018452823561015e198c360301811261329e578283fd5b6132aa868d8301613146565b955050602093840193929092019160010161325b565b50505050828103602084015261323281858761311b565b602081526000611f1560208301848661311b565b6000602082840312156132fd57600080fd5b8151612b6181612c3b565b67ffffffffffffffff81811683821601908082111561332957613329612f0a565b5092915050565b6000808585111561334057600080fd5b8386111561334d57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156133875780818660140360031b1b83161692505b505092915050565b8681526020808201879052604082018690528451606083015284015160808201526101208101835160a0830152602084015160c0830152825160e08301526020830151610100830152613232565b634e487b7160e01b600052602160045260246000fd5b60006003851061341357634e487b7160e01b600052602160045260246000fd5b8482526060602083015261342a6060830185612f67565b9050826040830152949350505050565b600060033d11156134535760046000803e5060005160e01c5b90565b600060443d10156134645790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156134b257505050505090565b82850191508151818111156134ca5750505050505090565b843d87010160208285010111156134e45750505050505090565b6134f360208286010187612c0e565b509095945050505050565b8381526001600160a01b03831660208201526060604082015260006135266060830184612f67565b95945050505050565b60006101c0808352613544818401878961311b565b905084516001600160a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a08401526132328185612f67565b6000602082840312156135f557600080fd5b5051919050565b60808152600061360f6080830187613146565b6020830195909552506001600160a01b03929092166040830152606090910152919050565b6060815260006136476060830186613146565b60208301949094525060400152919050565b6000806040838503121561366c57600080fd5b825167ffffffffffffffff8082111561368457600080fd5b818501915085601f83011261369857600080fd5b8151818111156136aa576136aa612bb1565b60405191506136c36020601f19601f8401160183612c0e565b8082528660208285010111156136d857600080fd5b6136e9816020840160208601612f43565b5060209490940151939593945050505056fea2646970667358221220058f16a69977812527273b9f2aea68ccbd412808469eeddf382ffd4c02e4e1cd64736f6c63430008110033608060405234801561001057600080fd5b50610213806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100f9565b61006c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008061007c601482858761016b565b61008591610195565b60601c90506000610099846014818861016b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100f057600093505b50505092915050565b6000806020838503121561010c57600080fd5b823567ffffffffffffffff8082111561012457600080fd5b818501915085601f83011261013857600080fd5b81358181111561014757600080fd5b86602082850101111561015957600080fd5b60209290920196919550909350505050565b6000808585111561017b57600080fd5b8386111561018857600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156101d55780818660140360031b1b83161692505b50509291505056fea264697066735822122027016fd42ee16336a5dfa982494f92cb77bd4ee4201d451ae19d7c4c989fbff264736f6c63430008110033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
