/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../../contracts/VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "extraUnstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200136f3803806200136f83398101604081905262000034916200016a565b828180620000428162000064565b506200004e82620000b4565b5050506001600160a01b031660805250620001be565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000be620000e0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b33620000f46000546001600160a01b031690565b6001600160a01b0316146200014f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6001600160a01b03811681146200016757600080fd5b50565b6000806000606084860312156200018057600080fd5b83516200018d8162000151565b6020850151909350620001a08162000151565b6040850151909250620001b38162000151565b809150509250925092565b60805161118e620001e1600039600081816101340152610924015261118e6000f3fe6080604052600436106100e85760003560e01c8063b0d691fe1161008a578063c399ec8811610059578063c399ec8814610269578063d0e30db01461027e578063f2fde38b14610286578063f465c77e146102a657600080fd5b8063b0d691fe146101e6578063bb9fe6bf14610206578063c23a5cea1461021b578063c266f2921461023b57600080fd5b8063584465f2116100c6578063584465f214610173578063715018a6146101935780638da5cb5b146101a8578063a9a23409146101c657600080fd5b80630396cb60146100ed578063205c28781461010257806323d9ac9b14610122575b600080fd5b6101006100fb366004610deb565b6102d3565b005b34801561010e57600080fd5b5061010061011d366004610e24565b6103ec565b34801561012e57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017f57600080fd5b5061010061018e366004610e50565b61045b565b34801561019f57600080fd5b5061010061049d565b3480156101b457600080fd5b506000546001600160a01b0316610156565b3480156101d257600080fd5b506101006101e1366004610e6d565b6104b1565b3480156101f257600080fd5b50600154610156906001600160a01b031681565b34801561021257600080fd5b506101006104cb565b34801561022757600080fd5b50610100610236366004610e50565b610537565b34801561024757600080fd5b5061025b610256366004610f15565b6105ba565b60405190815260200161016a565b34801561027557600080fd5b5061025b61068d565b610100610718565b34801561029257600080fd5b506101006102a1366004610e50565b610777565b3480156102b257600080fd5b506102c66102c1366004610f52565b61080c565b60405161016a9190610fa0565b6102db6109da565b600154604080517f390b997800000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921691630396cb609134918591859163390b99789160048082019260209290919082900301816000875af115801561034c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103709190610fee565b61037a919061103a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815263ffffffff9190911660048201526024016000604051808303818588803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b505050505050565b6103f46109da565b6001546040517f205c28780000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b1580156103d057600080fd5b6104636109da565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6104a56109da565b6104af6000610a43565b565b6104b9610aab565b6104c584848484610ac2565b50505050565b6104d36109da565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561052357600080fd5b505af11580156104c5573d6000803e3d6000fd5b61053f6109da565b6001546040517fc23a5cea0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561059f57600080fd5b505af11580156105b3573d6000803e3d6000fd5b5050505050565b6000813560208301356105d0604085018561105e565b6040516105de9291906110c3565b6040519081900390206105f4606086018661105e565b6040516106029291906110c3565b604080519182900382206001600160a01b03909516602083015281019290925260608201526080808201929092529083013560a08083019190915283013560c08083019190915283013560e08083019190915283013561010080830191909152830135610120820152610140015b604051602081830303815290604052805190602001209050919050565b6001546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071391906110d3565b905090565b6001546040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561059f57600080fd5b61077f6109da565b6001600160a01b0381166108005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61080981610a43565b50565b60606000610819856105ba565b905036600061082c61012088018861105e565b9092509050600061083e6014836110ec565b9050806040148061084f5750806041145b6108c3576040805162461bcd60e51b81526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e644461746160648201526084016107f7565b6109196108d383601481876110ff565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109139250889150610b0a9050565b90610b45565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146109bf5760405162461bcd60e51b815260206004820152602360248201527f566572696679696e675061796d61737465723a2077726f6e67207369676e617460448201527f757265000000000000000000000000000000000000000000000000000000000060648201526084016107f7565b50506040805160208101909152600081529695505050505050565b336109ed6000546001600160a01b031690565b6001600160a01b0316146104af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107f7565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b031633146104af57600080fd5b60405162461bcd60e51b815260206004820152600d60248201527f6d757374206f766572726964650000000000000000000000000000000000000060448201526064016107f7565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610670565b6000806000610b548585610b6b565b91509150610b6181610bb0565b5090505b92915050565b6000808251604103610ba15760208301516040840151606085015160001a610b9587828585610d15565b94509450505050610ba9565b506000905060025b9250929050565b6000816004811115610bc457610bc4611129565b03610bcc5750565b6001816004811115610be057610be0611129565b03610c2d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107f7565b6002816004811115610c4157610c41611129565b03610c8e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107f7565b6003816004811115610ca257610ca2611129565b036108095760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016107f7565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d4c5750600090506003610dd0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610da0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610dc957600060019250925050610dd0565b9150600090505b94509492505050565b63ffffffff8116811461080957600080fd5b600060208284031215610dfd57600080fd5b8135610e0881610dd9565b9392505050565b6001600160a01b038116811461080957600080fd5b60008060408385031215610e3757600080fd5b8235610e4281610e0f565b946020939093013593505050565b600060208284031215610e6257600080fd5b8135610e0881610e0f565b60008060008060608587031215610e8357600080fd5b843560038110610e9257600080fd5b9350602085013567ffffffffffffffff80821115610eaf57600080fd5b818701915087601f830112610ec357600080fd5b813581811115610ed257600080fd5b886020828501011115610ee457600080fd5b95986020929092019750949560400135945092505050565b60006101608284031215610f0f57600080fd5b50919050565b600060208284031215610f2757600080fd5b813567ffffffffffffffff811115610f3e57600080fd5b610f4a84828501610efc565b949350505050565b600080600060608486031215610f6757600080fd5b833567ffffffffffffffff811115610f7e57600080fd5b610f8a86828701610efc565b9660208601359650604090950135949350505050565b600060208083528351808285015260005b81811015610fcd57858101830151858201604001528201610fb1565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561100057600080fd5b8151610e0881610dd9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff8181168382160190808211156110575761105761100b565b5092915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261109357600080fd5b83018035915067ffffffffffffffff8211156110ae57600080fd5b602001915036819003821315610ba957600080fd5b8183823760009101908152919050565b6000602082840312156110e557600080fd5b5051919050565b81810381811115610b6557610b6561100b565b6000808585111561110f57600080fd5b8386111561111c57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220e108542fca7c1534900afa5a55c6460ec86ea3712761d88c117b056f213c7aea64736f6c63430008110033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      _owner,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  override connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}
