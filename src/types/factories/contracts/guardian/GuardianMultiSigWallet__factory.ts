/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GuardianMultiSigWallet,
  GuardianMultiSigWalletInterface,
} from "../../../contracts/guardian/GuardianMultiSigWallet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signatures",
        type: "bytes",
      },
      {
        internalType: "uint16",
        name: "requiredSignatures",
        type: "uint16",
      },
    ],
    name: "checkNSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_guardians",
        type: "address[]",
      },
      {
        internalType: "uint16",
        name: "_threshold",
        type: "uint16",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161143661011960003960008181610365015281816103fb0152818161050201528181610598015261069301526114366000f3fe6080604052600436106100655760003560e01c80634f1ef286116100435780634f1ef2861461010257806352d1902d14610115578063860594951461013857600080fd5b80631626ba7e1461006a5780631bd90974146100c05780633659cfe6146100e2575b600080fd5b34801561007657600080fd5b5061008a6100853660046110e9565b610158565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b3480156100cc57600080fd5b506100e06100db366004611147565b610198565b005b3480156100ee57600080fd5b506100e06100fd3660046111e2565b61035b565b6100e06101103660046111fd565b6104f8565b34801561012157600080fd5b5061012a610686565b6040519081526020016100b7565b34801561014457600080fd5b506100e0610153366004611235565b61074b565b60665460009061016f908490849061ffff1661074b565b507f1626ba7e000000000000000000000000000000000000000000000000000000005b92915050565b600054610100900460ff16158080156101b85750600054600160ff909116105b806101d25750303b1580156101d2575060005460ff166001145b6102495760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460ff19166001179055801561026c576000805461ff0019166101001790555b8260005b818110156102df5760016065600088888581811061029057610290611283565b90506020020160208101906102a591906111e2565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806102d7816112af565b915050610270565b5050606680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff84161790558015610355576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103f95760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610240565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104547f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146104d05760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610240565b6104d981610bc9565b604080516000808252602082019092526104f591839190610c11565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105965760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610240565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105f17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b03161461066d5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610240565b61067682610bc9565b61068282826001610c11565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107265760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610240565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6107568160416112e7565b61ffff16825110156107aa5760405162461bcd60e51b815260206004820152601460248201527f7369676e61747572657320746f6f2073686f72740000000000000000000000006044820152606401610240565b6000808060008060005b8661ffff16811015610bbe576041818102890160208101516040820151919092015160ff16955090935091506000849003610ac35791935083916107f98760416112e7565b61ffff1682101561084c5760405162461bcd60e51b815260206004820152601d60248201527f636f6e7472616374207369676e61747572657320746f6f2073686f72740000006044820152606401610240565b875161085983602061130d565b11156108cd5760405162461bcd60e51b815260206004820152602160248201527f636f6e7472616374207369676e617475726573206f7574206f6620626f756e6460448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610240565b60208289018101518951909182906108e690869061130d565b6108f0919061130d565b111561093e5760405162461bcd60e51b815260206004820152601f60248201527f636f6e7472616374207369676e61747572652077726f6e67206f6666736574006044820152606401610240565b60606020848b01019050600080886001600160a01b0316631626ba7e60e01b8e85604051602401610970929190611370565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516109db9190611391565b600060405180830381855afa9150503d8060008114610a16576040519150601f19603f3d011682016040523d82523d6000602084013e610a1b565b606091505b5091509150818015610a2e575080516020145b8015610a6e575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090610a6c90830160209081019084016113ad565b145b610aba5760405162461bcd60e51b815260206004820152601a60248201527f636f6e7472616374207369676e617475726520696e76616c69640000000000006044820152606401610240565b50505050610b23565b6040805160008152602081018083528b905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610b16573d6000803e3d6000fd5b5050506020604051035194505b856001600160a01b0316856001600160a01b0316118015610b5c57506001600160a01b03851660009081526065602052604090205460ff165b610ba85760405162461bcd60e51b815260206004820152600d60248201527f766572696679206661696c6564000000000000000000000000000000000000006044820152606401610240565b8495508080610bb6906112af565b9150506107b4565b505050505050505050565b60405162461bcd60e51b815260206004820152601360248201527f64697361626c65207570677261646561626c65000000000000000000000000006044820152606401610240565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c4957610c4483610db6565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ca3575060408051601f3d908101601f19168201909252610ca0918101906113ad565b60015b610d155760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610240565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114610daa5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610240565b50610c44838383610e8c565b6001600160a01b0381163b610e335760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610240565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b610e9583610eb1565b600082511180610ea25750805b15610c44576103558383610ef1565b610eba81610db6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610f705760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610240565b600080846001600160a01b031684604051610f8b9190611391565b600060405180830381855af49150503d8060008114610fc6576040519150601f19603f3d011682016040523d82523d6000602084013e610fcb565b606091505b5091509150610ff382826040518060600160405280602781526020016113da60279139610ffc565b95945050505050565b6060831561100b575081611015565b611015838361101c565b9392505050565b81511561102c5781518083602001fd5b8060405162461bcd60e51b815260040161024091906113c6565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261106d57600080fd5b813567ffffffffffffffff8082111561108857611088611046565b604051601f8301601f19908116603f011681019082821181831017156110b0576110b0611046565b816040528381528660208588010111156110c957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156110fc57600080fd5b82359150602083013567ffffffffffffffff81111561111a57600080fd5b6111268582860161105c565b9150509250929050565b803561ffff8116811461114257600080fd5b919050565b60008060006040848603121561115c57600080fd5b833567ffffffffffffffff8082111561117457600080fd5b818601915086601f83011261118857600080fd5b81358181111561119757600080fd5b8760208260051b85010111156111ac57600080fd5b6020928301955093506111c29186019050611130565b90509250925092565b80356001600160a01b038116811461114257600080fd5b6000602082840312156111f457600080fd5b611015826111cb565b6000806040838503121561121057600080fd5b611219836111cb565b9150602083013567ffffffffffffffff81111561111a57600080fd5b60008060006060848603121561124a57600080fd5b83359250602084013567ffffffffffffffff81111561126857600080fd5b6112748682870161105c565b9250506111c260408501611130565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112e0576112e0611299565b5060010190565b61ffff81811683821602808216919082811461130557611305611299565b505092915050565b8082018082111561019257610192611299565b60005b8381101561133b578181015183820152602001611323565b50506000910152565b6000815180845261135c816020860160208601611320565b601f01601f19169290920160200192915050565b8281526040602082015260006113896040830184611344565b949350505050565b600082516113a3818460208701611320565b9190910192915050565b6000602082840312156113bf57600080fd5b5051919050565b602081526000611015602083018461134456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b6846d2e68f34fda74edd893d0d13697b517fab6e7728ef44d3d11d90ef9e88064736f6c63430008110033";

type GuardianMultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuardianMultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuardianMultiSigWallet__factory extends ContractFactory {
  constructor(...args: GuardianMultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GuardianMultiSigWallet> {
    return super.deploy(overrides || {}) as Promise<GuardianMultiSigWallet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GuardianMultiSigWallet {
    return super.attach(address) as GuardianMultiSigWallet;
  }
  override connect(signer: Signer): GuardianMultiSigWallet__factory {
    return super.connect(signer) as GuardianMultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuardianMultiSigWalletInterface {
    return new utils.Interface(_abi) as GuardianMultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuardianMultiSigWallet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GuardianMultiSigWallet;
  }
}
