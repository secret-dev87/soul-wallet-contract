/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GuardianMultiSigWallet,
  GuardianMultiSigWalletInterface,
} from "../../../contracts/guardian/GuardianMultiSigWallet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signatures",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "requiredSignatures",
        type: "uint256",
      },
    ],
    name: "checkNSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_guardians",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161116a61011960003960008181610159015281816101a20152818161022a0152818161026a01526102e6015261116a6000f3fe6080604052600436106100555760003560e01c80631626ba7e1461005a5780633659cfe6146100985780634f1ef286146100ba57806352d1902d146100cd57806360b5bb3f146100f0578063a3edc92514610110575b600080fd5b34801561006657600080fd5b5061007a610075366004610db4565b610130565b6040516001600160e01b031990911681526020015b60405180910390f35b3480156100a457600080fd5b506100b86100b3366004610e16565b61014f565b005b6100b86100c8366004610e31565b610220565b3480156100d957600080fd5b506100e26102d9565b60405190815260200161008f565b3480156100fc57600080fd5b506100b861010b366004610e68565b610387565b34801561011c57600080fd5b506100b861012b366004610ee2565b610514565b600061013f8383606654610514565b50630b135d3f60e11b5b92915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101a05760405162461bcd60e51b815260040161019790610f31565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166101d2610908565b6001600160a01b0316146101f85760405162461bcd60e51b815260040161019790610f6b565b61020181610924565b6040805160008082526020820190925261021d91839190610962565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102685760405162461bcd60e51b815260040161019790610f31565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661029a610908565b6001600160a01b0316146102c05760405162461bcd60e51b815260040161019790610f6b565b6102c982610924565b6102d582826001610962565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103745760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610197565b506000805160206110ee83398151915290565b600054610100900460ff16158080156103a75750600054600160ff909116105b806103c857506103b630610ad2565b1580156103c8575060005460ff166001145b61042b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610197565b6000805460ff19166001179055801561044e576000805461ff0019166101001790555b8260005b818110156104c15760016065600088888581811061047257610472610fa5565b90506020020160208101906104879190610e16565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806104b981610fd1565b915050610452565b50506066829055801561050e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b61051f816041610fea565b825110156105665760405162461bcd60e51b81526020600482015260146024820152731cda59db985d1d5c995cc81d1bdbc81cda1bdc9d60621b6044820152606401610197565b6000808060008060005b868110156108fd576041818102890160208101516040820151919092015160ff169550909350915060008490036108125791935083916105b1876041610fea565b8210156106005760405162461bcd60e51b815260206004820152601d60248201527f636f6e7472616374207369676e61747572657320746f6f2073686f72740000006044820152606401610197565b875161060d836020611001565b11156106655760405162461bcd60e51b815260206004820152602160248201527f636f6e7472616374207369676e617475726573206f7574206f6620626f756e646044820152607360f81b6064820152608401610197565b602082890181015189519091829061067e908690611001565b6106889190611001565b11156106d65760405162461bcd60e51b815260206004820152601f60248201527f636f6e7472616374207369676e61747572652077726f6e67206f6666736574006044820152606401610197565b60606020848b01019050600080886001600160a01b0316631626ba7e60e01b8e85604051602401610708929190611064565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516107469190611085565b600060405180830381855afa9150503d8060008114610781576040519150601f19603f3d011682016040523d82523d6000602084013e610786565b606091505b5091509150818015610799575080516020145b80156107c057508051630b135d3f60e11b906107be90830160209081019084016110a1565b145b6108095760405162461bcd60e51b815260206004820152601a60248201527918dbdb9d1c9858dd081cda59db985d1d5c99481a5b9d985b1a5960321b6044820152606401610197565b50505050610872565b6040805160008152602081018083528b905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610865573d6000803e3d6000fd5b5050506020604051035194505b856001600160a01b0316856001600160a01b03161180156108ab57506001600160a01b03851660009081526065602052604090205460ff165b6108e75760405162461bcd60e51b815260206004820152600d60248201526c1d995c9a599e4819985a5b1959609a1b6044820152606401610197565b84955080806108f590610fd1565b915050610570565b505050505050505050565b6000805160206110ee833981519152546001600160a01b031690565b60405162461bcd60e51b815260206004820152601360248201527264697361626c65207570677261646561626c6560681b6044820152606401610197565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561099a5761099583610ae1565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109f4575060408051601f3d908101601f191682019092526109f1918101906110a1565b60015b610a575760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610197565b6000805160206110ee8339815191528114610ac65760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610197565b50610995838383610b7b565b6001600160a01b03163b151590565b610aea81610ad2565b610b4c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610197565b6000805160206110ee83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610b8483610ba0565b600082511180610b915750805b156109955761050e8383610be0565b610ba981610ae1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610beb83610ad2565b610c465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610197565b600080846001600160a01b031684604051610c619190611085565b600060405180830381855af49150503d8060008114610c9c576040519150601f19603f3d011682016040523d82523d6000602084013e610ca1565b606091505b5091509150610cc9828260405180606001604052806027815260200161110e60279139610cd2565b95945050505050565b60608315610ce1575081610d0b565b825115610cf15782518084602001fd5b8160405162461bcd60e51b815260040161019791906110ba565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d3957600080fd5b81356001600160401b0380821115610d5357610d53610d12565b604051601f8301601f19908116603f01168101908282118183101715610d7b57610d7b610d12565b81604052838152866020858801011115610d9457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610dc757600080fd5b8235915060208301356001600160401b03811115610de457600080fd5b610df085828601610d28565b9150509250929050565b80356001600160a01b0381168114610e1157600080fd5b919050565b600060208284031215610e2857600080fd5b610d0b82610dfa565b60008060408385031215610e4457600080fd5b610e4d83610dfa565b915060208301356001600160401b03811115610de457600080fd5b600080600060408486031215610e7d57600080fd5b83356001600160401b0380821115610e9457600080fd5b818601915086601f830112610ea857600080fd5b813581811115610eb757600080fd5b8760208260051b8501011115610ecc57600080fd5b6020928301989097509590910135949350505050565b600080600060608486031215610ef757600080fd5b8335925060208401356001600160401b03811115610f1457600080fd5b610f2086828701610d28565b925050604084013590509250925092565b6020808252602c908201526000805160206110ce83398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201526000805160206110ce83398151915260408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fe357610fe3610fbb565b5060010190565b808202811582820484141761014957610149610fbb565b8082018082111561014957610149610fbb565b60005b8381101561102f578181015183820152602001611017565b50506000910152565b60008151808452611050816020860160208601611014565b601f01601f19169290920160200192915050565b82815260406020820152600061107d6040830184611038565b949350505050565b60008251611097818460208701611014565b9190910192915050565b6000602082840312156110b357600080fd5b5051919050565b602081526000610d0b602083018461103856fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122009b945c858c13d452012972bc7304b81580aa79a2eecf23d05ecd0e490434f1264736f6c63430008110033";

type GuardianMultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuardianMultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuardianMultiSigWallet__factory extends ContractFactory {
  constructor(...args: GuardianMultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GuardianMultiSigWallet> {
    return super.deploy(overrides || {}) as Promise<GuardianMultiSigWallet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GuardianMultiSigWallet {
    return super.attach(address) as GuardianMultiSigWallet;
  }
  override connect(signer: Signer): GuardianMultiSigWallet__factory {
    return super.connect(signer) as GuardianMultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuardianMultiSigWalletInterface {
    return new utils.Interface(_abi) as GuardianMultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuardianMultiSigWallet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GuardianMultiSigWallet;
  }
}
