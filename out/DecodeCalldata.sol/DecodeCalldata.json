{
  "abi": [],
  "bytecode": {
    "object": "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae2eea744dd27adfae19434c086aaf776b8ea5c072c0a7a17296248fa3db8dcf64736f6c63430008130033",
    "sourceMap": "62:340:35:-:0;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x600080fdfea2646970667358221220ae2eea744dd27adfae19434c086aaf776b8ea5c072c0a7a17296248fa3db8dcf64736f6c63430008130033",
    "sourceMap": "62:340:35:-:0;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/DecodeCalldata.sol\":\"DecodeCalldata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@source/=contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/libraries/DecodeCalldata.sol\":{\"keccak256\":\"0x9ded4902fd25a83c07f7cca112c6b993024b091b1c12ecf22a9df478a1815aed\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fe23856da97d2db60b6dfe4a60d278a5abf89a65c1b3c50a3bbd4bd8922a6643\",\"dweb:/ipfs/QmTfNuxueavPMKNANVTG7zJUtQDSmB2dSMsurT1yor8eFb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@account-abstraction/=lib/account-abstraction/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@source/=contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/libraries/DecodeCalldata.sol": "DecodeCalldata"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/libraries/DecodeCalldata.sol": {
        "keccak256": "0x9ded4902fd25a83c07f7cca112c6b993024b091b1c12ecf22a9df478a1815aed",
        "urls": [
          "bzz-raw://fe23856da97d2db60b6dfe4a60d278a5abf89a65c1b3c50a3bbd4bd8922a6643",
          "dweb:/ipfs/QmTfNuxueavPMKNANVTG7zJUtQDSmB2dSMsurT1yor8eFb"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/libraries/DecodeCalldata.sol",
    "id": 3820,
    "exportedSymbols": {
      "DecodeCalldata": [
        3819
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:367:35",
    "nodes": [
      {
        "id": 3809,
        "nodeType": "PragmaDirective",
        "src": "36:24:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 3819,
        "nodeType": "ContractDefinition",
        "src": "62:340:35",
        "nodes": [
          {
            "id": 3818,
            "nodeType": "FunctionDefinition",
            "src": "92:303:35",
            "nodes": [],
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "189:206:35",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "208:181:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "222:29:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "246:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "240:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "240:11:35"
                        },
                        "variables": [
                          {
                            "name": "dataLength",
                            "nodeType": "YulTypedName",
                            "src": "226:10:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "288:44:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "313:1:35",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "316:1:35",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "306:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "306:12:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "306:12:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "dataLength",
                              "nodeType": "YulIdentifier",
                              "src": "270:10:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "282:4:35",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "267:2:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "267:20:35"
                        },
                        "nodeType": "YulIf",
                        "src": "264:68:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "345:34:35",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "367:4:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "373:4:35",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "363:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "363:15:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "357:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "357:22:35"
                        },
                        "variableNames": [
                          {
                            "name": "methodId",
                            "nodeType": "YulIdentifier",
                            "src": "345:8:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 3811,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "246:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3811,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "367:4:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3814,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "345:8:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 3816,
                  "nodeType": "InlineAssembly",
                  "src": "199:190:35"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decodeMethodId",
            "nameLocation": "101:14:35",
            "parameters": {
              "id": 3812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3811,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "138:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "125:17:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3810,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "115:33:35"
            },
            "returnParameters": {
              "id": 3815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3814,
                  "mutability": "mutable",
                  "name": "methodId",
                  "nameLocation": "179:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "172:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3813,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "171:17:35"
            },
            "scope": 3819,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DecodeCalldata",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3819
        ],
        "name": "DecodeCalldata",
        "nameLocation": "70:14:35",
        "scope": 3820,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 35
}