{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_initCode",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "createdContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657610120908161001c8239f35b600080fdfe60806040526004361015601157600080fd5b6000803560e01c634af63f0214602657600080fd5b3460d157604036600319011260d1576004359067ffffffffffffffff9081831160d1573660238401121560d15782600401359282841160cd5760405192601f8501601f19908116603f011684019081118482101760cd576040528383526020830190366024868301011160c95760208560c5966024869401853785010152602435925191f56040516001600160a01b0390911681529081906020820190565b0390f35b8280fd5b60d4565b80fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b8d57ca9e1d4c0d3c7cea57048f6c5308340eee9494770483667ecb6938ba46e64736f6c63430008130033",
    "sourceMap": "339:535:14:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015601157600080fd5b6000803560e01c634af63f0214602657600080fd5b3460d157604036600319011260d1576004359067ffffffffffffffff9081831160d1573660238401121560d15782600401359282841160cd5760405192601f8501601f19908116603f011684019081118482101760cd576040528383526020830190366024868301011160c95760208560c5966024869401853785010152602435925191f56040516001600160a01b0390911681529081906020820190565b0390f35b8280fd5b60d4565b80fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b8d57ca9e1d4c0d3c7cea57048f6c5308340eee9494770483667ecb6938ba46e64736f6c63430008130033",
    "sourceMap": "339:535:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;339:535:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;339:535:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:109;;;;339:535;;-1:-1:-1;;;;;339:535:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deploy(bytes,bytes32)": "4af63f02"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"createdContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ricardo Guilherme Schmidt (Status Research & Development GmbH)\",\"kind\":\"dev\",\"methods\":{\"deploy(bytes,bytes32)\":{\"params\":{\"_initCode\":\"Initialization code.\",\"_salt\":\"Arbitrary value to modify resulting address.\"},\"returns\":{\"createdContract\":\"Created contract address.\"}}},\"title\":\"Singleton Factory (EIP-2470)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(bytes,bytes32)\":{\"notice\":\"Deploys `_initCode` using `_salt` for defining the deterministic address.\"}},\"notice\":\"Exposes CREATE2 (EIP-1014) to deploy bytecode on deterministic addresses based on initialization code and salt.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dev/SingletonFactory.sol\":\"SingletonFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@source/=contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/dev/SingletonFactory.sol\":{\"keccak256\":\"0xd159984a90167f53e361c9961db8567a727e6c65ddbfceebcff9ab0d061234ea\",\"urls\":[\"bzz-raw://f5f24d1d6e9a0f466f32a1ca3cf4a96064d0a9bae823a122b9270177ea95bfc2\",\"dweb:/ipfs/QmduDPZimmrpSgA9FvY9QpDsCDxANrcD38WYUkL2VtBQbb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "createdContract",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deploy(bytes,bytes32)": {
            "params": {
              "_initCode": "Initialization code.",
              "_salt": "Arbitrary value to modify resulting address."
            },
            "returns": {
              "createdContract": "Created contract address."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deploy(bytes,bytes32)": {
            "notice": "Deploys `_initCode` using `_salt` for defining the deterministic address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@account-abstraction/=lib/account-abstraction/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@source/=contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dev/SingletonFactory.sol": "SingletonFactory"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/dev/SingletonFactory.sol": {
        "keccak256": "0xd159984a90167f53e361c9961db8567a727e6c65ddbfceebcff9ab0d061234ea",
        "urls": [
          "bzz-raw://f5f24d1d6e9a0f466f32a1ca3cf4a96064d0a9bae823a122b9270177ea95bfc2",
          "dweb:/ipfs/QmduDPZimmrpSgA9FvY9QpDsCDxANrcD38WYUkL2VtBQbb"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dev/SingletonFactory.sol",
    "id": 2384,
    "exportedSymbols": {
      "SingletonFactory": [
        2383
      ]
    },
    "nodeType": "SourceUnit",
    "src": "69:878:14",
    "nodes": [
      {
        "id": 2369,
        "nodeType": "PragmaDirective",
        "src": "69:24:14",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 2383,
        "nodeType": "ContractDefinition",
        "src": "339:535:14",
        "nodes": [
          {
            "id": 2382,
            "nodeType": "FunctionDefinition",
            "src": "643:229:14",
            "nodes": [],
            "body": {
              "id": 2381,
              "nodeType": "Block",
              "src": "747:125:14",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "766:100:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "780:76:14",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "807:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "_initCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "814:9:14"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "825:4:14",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "810:3:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "810:20:14"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "_initCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "838:9:14"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "832:5:14"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "832:16:14"
                            },
                            {
                              "name": "_salt",
                              "nodeType": "YulIdentifier",
                              "src": "850:5:14"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "799:7:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "799:57:14"
                        },
                        "variableNames": [
                          {
                            "name": "createdContract",
                            "nodeType": "YulIdentifier",
                            "src": "780:15:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 2373,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "814:9:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2373,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "838:9:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2375,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "850:5:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2378,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "780:15:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 2380,
                  "nodeType": "InlineAssembly",
                  "src": "757:109:14"
                }
              ]
            },
            "documentation": {
              "id": 2371,
              "nodeType": "StructuredDocumentation",
              "src": "371:267:14",
              "text": " @notice Deploys `_initCode` using `_salt` for defining the deterministic address.\n @param _initCode Initialization code.\n @param _salt Arbitrary value to modify resulting address.\n @return createdContract Created contract address."
            },
            "functionSelector": "4af63f02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "652:6:14",
            "parameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "_initCode",
                  "nameLocation": "672:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "659:22:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "691:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "683:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:39:14"
            },
            "returnParameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2378,
                  "mutability": "mutable",
                  "name": "createdContract",
                  "nameLocation": "730:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "714:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:15:14",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "713:33:14"
            },
            "scope": 2383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SingletonFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2370,
          "nodeType": "StructuredDocumentation",
          "src": "95:243:14",
          "text": " @title Singleton Factory (EIP-2470)\n @notice Exposes CREATE2 (EIP-1014) to deploy bytecode on deterministic addresses based on initialization code and salt.\n @author Ricardo Guilherme Schmidt (Status Research & Development GmbH)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2383
        ],
        "name": "SingletonFactory",
        "nameLocation": "348:16:14",
        "scope": 2384,
        "usedErrors": []
      }
    ]
  },
  "id": 14
}